["uprv_decNumberXor_61", "uprv_decNumberMaxMag_61", "?decExpOp@@YAPEAUdecNumber@@PEAU1@PEBU1@PEAUdecContext@@PEAI@Z", "uprv_decNumberCompareTotal_61", "uprv_decNumberRotate_61", "uprv_decNumberMin_61", "uprv_decNumberGetBCD_61", "?decSetSubnormal@@YAXPEAUdecNumber@@PEAUdecContext@@PEAHPEAI@Z", "?decDecap@@YAPEAUdecNumber@@PEAU1@H@Z", "uprv_decNumberLn_61", "uprv_decNumberToEngString_61", "uprv_decNumberLog10_61", "uprv_decNumberSameQuantum_61", "uprv_decNumberRemainderNear_61", "uprv_decNumberIsNormal_61", "uprv_decNumberDivide_61", "uprv_decNumberMinus_61", "?uprv_decNumberClass_61@@YA?AW4decClass@@PEBUdecNumber@@PEAUdecContext@@@Z", "uprv_decNumberCopySign_61", "uprv_decNumberRescale_61", "?decDivideOp@@YAPEAUdecNumber@@PEAU1@PEBU1@1PEAUdecContext@@EPEAI@Z", "uprv_decNumberMinMag_61", "?decSetOverflow@@YAXPEAUdecNumber@@PEAUdecContext@@PEAI@Z", "uprv_decNumberExp_61", "?decCheckMath@@YAIPEBUdecNumber@@PEAUdecContext@@PEAI@Z", "uprv_decNumberPower_61", "?decUnitCompare@@YAHPEBEH0HH@Z", "uprv_decNumberShift_61", "uprv_decNumberNormalize_61", "uprv_decNumberOr_61", "?decGetInt@@YAHPEBUdecNumber@@@Z", "uprv_decNumberSetBCD_61", "uprv_decNumberToUInt32_61", "uprv_decNumberDivideInteger_61", "uprv_decNumberCompareSignal_61", "uprv_decNumberNextMinus_61", "uprv_decNumberSquareRoot_61", "uprv_decNumberSubtract_61", "?decCompareOp@@YAPEAUdecNumber@@PEAU1@PEBU1@1PEAUdecContext@@EPEAI@Z", "?decReverse@@YAXPEAE0@Z", "uprv_decNumberInvert_61", "?decCompare@@YAHPEBUdecNumber@@0E@Z", "uprv_decNumberCopyNegate_61", "uprv_decNumberAbs_61", "uprv_decNumberVersion_61", "uprv_decNumberToIntegralExact_61", "uprv_decNumberCompareTotalMag_61", "uprv_decNumberCompare_61", "uprv_decNumberFromInt32_61", "uprv_decNumberIsSubnormal_61", "uprv_decNumberMax_61", "?decLnOp@@YAPEAUdecNumber@@PEAU1@PEBU1@PEAUdecContext@@PEAI@Z", "uprv_decNumberNextPlus_61", "uprv_decNumberClassToString_61", "?decSetMaxValue@@YAXPEAUdecNumber@@PEAUdecContext@@@Z", "uprv_decNumberAnd_61", "uprv_decNumberRemainder_61", "uprv_decNumberNextToward_61", "uprv_decNumberFMA_61", "uprv_decNumberFromUInt32_61", "uprv_decNumberCopyAbs_61", "uprv_decNumberAdd_61", "uprv_decNumberLogB_61", "uprv_decNumberScaleB_61", "uprv_decNumberToIntegralValue_61"]